---
import { HeartHandshake, Text } from "lucide-preact";
import ThemeSwitcher from "./ThemeSwitcher/ThemeSwitcher.astro";

const links = [
  { id: "home", label: "Home" },
  { id: "experience", label: "Experience" },
  { id: "frontend", label: "Frontend" },
  { id: "backend", label: "Backend" },
  { id: "leadership", label: "Leadership" },
  { id: "design", label: "UX" },
];
---

<nav class="container-hybrid top-bar" id="navbar">
  <ul>
    <li>
      <ThemeSwitcher />
    </li>
  </ul>
  <ul class="menu-btn">
    <button type="button" aria-label="menu button" class="menu-toggle">
      <Text />
    </button>
  </ul>
  <ul class="links">
    {
      links.map(({ id, label }) => (
        <li>
          <a href={`#${id}`}>{label}</a>
        </li>
      ))
    }
    <li class="visible--sticky">
      <a href="https://pl.linkedin.com/in/sebastian-dybowski" role="button">
        <HeartHandshake /> hire me
      </a>
    </li>
  </ul>
</nav>

<style>
  .top-bar {
    border-bottom: var(--border-width) solid var(--muted-border-color);
    z-index: 1;
  }

  .sticky {
    position: sticky;
    top: 0;
    backdrop-filter: blur(0.25rem);
    background-color: rgba(var(--background-color), 0.8);
  }

  li.visible--sticky {
    padding: 0 var(--nav-element-spacing-horizontal);
    margin-bottom: 0.25rem;
  }

  .visible--sticky {
    display: none;
  }

  .sticky .visible--sticky {
    display: inline-block;
  }

  .menu-btn button {
    margin: 0;
  }

  .links.visible {
    display: flex;
    flex-direction: column;
  }

  .links.hidden {
    display: none;
  }

  .menu-toggle {
    border: none;
    background: transparent;
  }

  .menu-toggle:hover {
    color: var(--primary);
  }

  @media screen and (max-width: 991px) {
    .links {
      display: none;
    }

    li.visible--sticky {
      display: inline-flex;
    }
  }

  @media screen and (min-width: 992px) {
    .menu-btn {
      display: none;
    }
  }
</style>

<script lang="ts">
  let isVisible = false;

  document
    .querySelectorAll(".menu-btn button")[0]
    .addEventListener("click", () => {
      console.log("click");

      document
        .getElementsByClassName("links")[0]
        .classList.add(isVisible ? "hidden" : "visible");
      document
        .getElementsByClassName("links")[0]
        .classList.remove(isVisible ? "visible" : "hidden");

      isVisible = !isVisible;
    });

  document.addEventListener("scroll", () => {
    const HTMLElement = document.getElementsByTagName("html")[0];
    const NavbarHeight = document.getElementById("navbar")?.offsetHeight || 0;
    const HeroHeight = document.getElementById("hero")?.offsetHeight || 0;

    console.log(HTMLElement.scrollTop > NavbarHeight + HeroHeight);

    if (HTMLElement.scrollTop > (NavbarHeight + HeroHeight) * 0.8) {
      document.getElementById("navbar")?.classList.add("sticky");
    } else {
      document.getElementById("navbar")?.classList.remove("sticky");
    }
  });
</script>
